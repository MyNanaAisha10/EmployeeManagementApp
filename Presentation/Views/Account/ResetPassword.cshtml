@using Presentation.Models.UserVm
@model ResetPasswordViewModel

@{
    ViewData["Title"] = "Reset Password";
}

<h2>Reset your password</h2>

<form asp-action="ResetPassword" method="post">
    <input type="hidden" asp-for="Token" />
    <input type="hidden" asp-for="Email" />

    <div class="form-group">
        <label for="Password">New Password</label>
        <input asp-for="Password" class="form-control" type="password" required />
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="ConfirmPassword">Confirm New Password</label>
        <input asp-for="ConfirmPassword" class="form-control" type="password" required />
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    <button type="submit" class="btn btn-success mt-3">Reset Password</button>
</form>